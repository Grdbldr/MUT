# This file tagged by Modflow-User-Tools version       1.13
#------------------------------------------------------------------------------------------
#1b.     HCLOSE   HICLOSE      MXITER    ITER1     IPRSMS  NONLINMETH  LINMETH   Options...
        1.0E-03   1.0E-05       250       600         1         1         1      SOLVEACTIVE      DAMPBOT
# HCLOSE—is the head change criterion for convergence of the outer (nonlinear)
#    iterations, in units of length. When the maximum absolute value of the head
#    change at all nodes during an iteration is less than or equal to HCLOSE,
#    iteration stops. Commonly, HCLOSE equals 0.01.
#
#HICLOSE—is the head change criterion for convergence of the inner (linear)
#    iterations, in units of length. When the maximum absolute value of the head
#    change at all nodes during an iteration is less than or equal to HICLOSE, the
#    matrix solver assumes convergence. Commonly, HICLOSE is set an order of
#    magnitude less than HCLOSE.
#
#MXITER—is the maximum number of outer (nonlinear) iterations -- that is,
#    calls to the solution routine. For a linear problem MXITER should be 1.
#
#    ITER1—is the maximum number of inner (linear) iterations. The number
#    typically depends on the characteristics of the matrix solution scheme being
#    used. For nonlinear problems,
#
#    ITER1 usually ranges from 60 to 600; a value of 100 will be sufficient for
#    most linear problems.
#
#IPRSMS—is a flag that controls printing of convergence information from the solver:
#    0 – print nothing
#    1 – print only the total number of iterations and nonlinear residual reduction summaries
#    2 – print matrix solver information in addition to above
#
#NONLINMETH—is a flag that controls the nonlinear solution method and under-relaxation schemes
#
#    0 – Picard iteration scheme is used without any under-relaxation schemes involved
#
#    > 0 – Newton-Raphson iteration scheme is used with under-relaxation. Note
#    that the Newton-Raphson linearization scheme is available only for the
#    upstream weighted solution scheme of the BCF and LPF packages.
#
#    < 0 – Picard iteration scheme is used with under-relaxation.
#
#    The absolute value of NONLINMETH determines the underrelaxation scheme used.
#    1 or -1 – Delta-Bar-Delta under-relaxation is used.
#    2 or -2 – Cooley under-relaxation scheme is used.
#
#    Note that the under-relaxation schemes are used in conjunction with
#    gradient based methods, however, experience has indicated that the Cooley
#    under-relaxation and damping work well also for the Picard scheme with
#    the wet/dry options of MODFLOW.
#
#LINMETH—is a flag that controls the matrix solution method
#    1 – the χMD solver of Ibaraki (2005) is used.
#    2 – the unstructured pre-conditioned conjugate gradient solver of White
#    and Hughes (2011) is used.
#
#----------------------------------------------------------------------------------------
#2.    THETA     AKAPPA      GAMMA     AMOMENTUM    NUMTRACK  BTOL      BREDUC     RESLIM
        0.7        0.1        0.1         0.            200     1.        0.2         1.
#THETA—is the reduction factor for the learning rate (under-relaxation term)
#    of the delta-bar-delta algorithm. The value of THETA is between zero and one.
#    If the change in the variable (head) is of opposite sign to that of the
#    previous iteration, the under-relaxation term is reduced by a factor of
#    THETA. The value usually ranges from 0.3 to 0.9; a value of 0.7 works well
#    for most problems.
#
#AKAPPA—is the increment for the learning rate (under-relaxation term) of the
#    delta-bar-delta algorithm. The value of AKAPPA is between zero and one. If
#    the change in the variable (head) is of the same sign to that of the previous
#    iteration, the under-relaxation term is increased by an increment of AKAPPA.
#    The value usually ranges from 0.03 to 0.3; a value of 0.1 works well for most
#    problems.
#
#GAMMA—is the history or memory term factor of the delta-bar-delta algorithm.
#    Gamma is between zero and 1 but cannot be equal to one. When GAMMA is zero,
#    only the most recent history (previous iteration value) is maintained. As
#    GAMMA is increased, past history of iteration changes has greater influence
#    on the memory term. The memory term is maintained as an exponential average
#    of past changes. Retaining some past history can overcome granular behavior
#    in the calculated function surface and therefore helps to overcome cyclic
#    patterns of non-convergence. The value usually ranges from 0.1 to 0.3; a
#    value of 0.2 works well for most problems.
#
#AMOMENTUM—is the fraction of past history changes that is added as a momentum
#    term to the step change for a nonlinear iteration. The value of AMOMENTUM is
#    between zero and one. A large momentum term should only be used when small
#    learning rates are expected. Small amounts of the momentum term help
#    convergence. The value usually ranges from 0.0001 to 0.1; a value of 0.001
#    works well for most problems.
#
#NUMTRACK—is the maximum number of backtracking iterations allowed for
#    residual reduction computations. If NUMTRACK = 0 then the backtracking
#    iterations are omitted. The value usually ranges from 2 to 20; a value of 10
#    works well for most problems.
#
#BTOL—is the tolerance for residual change that is allowed for residual
#    reduction computations. BTOL should not be less than one to avoid getting
#    stuck in local minima. A large value serves to check for extreme residual
#    increases, while a low value serves to control step size more severely. The
#    value usually ranges from 1.0 to 106; a value of 104 works well for most
#    problems but lower values like 1.1 may be required for harder problems.
#
#BREDUC—is the reduction in step size used for residual reduction
#    computations. The value of BREDUC is between zero and one. The value usually
#    ranges from 0.1 to 0.3; a value of 0.2 works well for most problems.
#
#RESLIM—is the limit to which the residual is reduced with backtracking. If
#    the residual is smaller than RESLIM, then further backtracking is not
#    performed. A value of 100 is suitable for large problems and residual
#    reduction to smaller values may only slow down computations.
#
#------------------------------------------------------------------------------------------
#For the χMD solver (Ibaraki, 2005):
#3.         IACL      NORDER     LEVEL      NORTH     IREDSYS RRCTOL        IDROPTOL  EPSRN
              1          0          7         14          0     0.              1    1.0E-03
#IACL—is the flag for choosing the acceleration method.
#    0 – Conjugate Gradient – select this option if the matrix is symmetric.
#    1 – ORTHOMIN
#    2 - BiCGSTAB
#
#NORDER—is the flag for choosing the ordering scheme.
#    0 – original ordering
#    1 – reverse Cuthill McKee ordering
#    2 – Minimum degree ordering
#
#LEVEL—is the level of fill for ILU decomposition. Higher levels of fill
#    provide more robustness but also require more memory. For optimal
#    performance, it is suggested that a large level of fill be applied (7 or 8)
#    with use of drop tolerance.
#
#NORTH—is the number of orthogonalizations for the ORTHOMIN acceleration
#    scheme. A number between 4 and 10 is appropriate. Small values require less
#    storage but more iteration may be required. This number should equal 2 for
#    the other acceleration methods.
#
#IREDSYS—is the index for creating a reduced system of equations using the
#    red-black ordering scheme.
#    0 – do not create reduced system
#    1 – create reduced system using red-black ordering
#
#RRCTOL—is a residual tolerance criterion for convergence. The root mean
#    squared residual of the matrix solution is evaluated against this number to
#    determine convergence. The solver assumes convergence if either HICLOSE (the
#    absolute head tolerance value for the solver) or RRCTOL is achieved. Note
#    that a value of zero ignores residual tolerance in favor of the absolute
#    tolerance (HICLOSE) for closure of the matrix solver.
#
#IDROPTOL—is the flag to perform drop tolerance.
#    0 – do not perform drop tolerance
#    1 – perform drop tolerance
#
#EPSRN—is the drop tolerance value. A value of 10-3 works well for most problems
#
